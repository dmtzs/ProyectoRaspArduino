------------------------------------Para la interfaz gráfica de la rasp------------------------------------

------------------------------------Interfaz principal------------------------------------
- Conectar a una API del clima para mostrar el clima actual
- Mostrar tal vez temperatura ambiente de la casa y no solo la del terrario con otro sensor de temperatura
- Mostrar nivel de agua del traste de la serpiente
- Mostrar temperatura del terrario
- Mostrar humedad del terrario
- Boton para controlar la bomba de agua que vaciara el traste de agua de la serpienteI(tal vez se necesite modificar el programa de arduino si se quiere implementar)
- Mostrar estado del sensor para la reserva de agua saber si se necesita llenar o no
- Mostrar temperatura de la reserva de agua pues debe estar entre tibia casi caliente

------------------------------------Panel de administración------------------------------------
- Poder modificar el archivo JSON que se usará para poder adaptar el software acorde a los parámetros que necesita el animal que se piensa cuidar
- Cambiar idioma
- Personalización de mensaje de bienvenida

------------------------------------Sobre nosotros------------------------------------
- Página donde dejemos nuestro contacto de GDCode
- Descripción de la empresa de GDCode y liga para nuestra página

------------------------------------Licencia------------------------------------
- Usar licencia libre pero dejar nuestro correo de GDCode para que nos contacten y el soporte, modificaciones, aditamentos, etc será cobrado por precios variables
- Considerar poner el cuerpo de la licencia en la página de sobre nosotros

------------------------------------Opcional------------------------------------
- Considerar la posibilidad de crear una página web en la que se puedan hacer configuraciones sin la necesidad de salir de la app en el rasp,
  dicho esto se tendrá que tomar en cuenta la posibilidad de poder crear una base de datos de la que el programa obtendrá la configuración y que se-
  pueda cambiar en tiempo real. Ver modo de optimizar eso.
- Si se hace la base de datos para los puntos anterores usar mongodb y se usará docker. Checar video de youtube guardado en la lista de python en la que usan y-
  conectan docker para mongodb
- Si se crea la base de datos hacer que desde tu cel cuando pones un evento en tu calendario se registre en la base de datos y se pueda mostrar en la app


------------------------------------Cosas electron------------------------------------
- Generar ejecutable para proteger el código, checar si se puede hacer via comandos y ver si es más fácil distribuir el ejecutable o primero el código y sobre la rasp ejecutar los comandos de creación del -
 ejecutable y después borrar el repositorio correspondiente.

npm init -> Crea paquete json para modificarlo posteriormente aunque es para crear proyecto de nodejs

npm install --save-dev electron -> Para instalar electron

En linux:
Instalar node -> sudo apt install nodejs
Instalar npm -> sudo apt install npm

"start": "electron index.js" -> en linux, archivo: package.json
//"start": "electron ." -> en windows, archivo: package.json

Si en linux se tiene problemas para ejecutar lo de flask: https://medium.com/@sanzidkawsar/the-python-flask-problem-oserror-errno-98-address-already-in-use-flask-49daaccaef4f


------------------------------------appData, archivo json------------------------------------
- Continuar creando el archivo json en donde se tomará alguna de las configuraciones de la app como los rangos de las temperaturas, humedad, etc
- Continuar agregando mas cosas que nos interesen que se quede en ese archivo como configuración de la app
- Los rangos de humedad y temperaturas es para que el usuario defina que si baja de esos rangos se active lo que debe activarse
- El estado de los focos es para que el usuario indique qué foco es el que se debe de encender en caso la temperatura del terrario baje del rango que el usuario desea
- Los nombres de usuario es para mostrarle algunas cosas de la app con su nombre para ese sentimiento de pertenencia
- Lo que está antes de la configuración es para mostrar un poco de info general de la app.
- Lo de modo app es para que se inicie en modo automático de manera predeterminada

------------------------------------Actualizaciones futuras------------------------------------
- Checar la viabilidad de la implementacion de api de tiempo para saber que hora es y activar o desactivar el modo dia y noche
- Checar la viabilidad de la implementacion de cambiar entre español e inglés, en este caso sería para inglés porque la de español ya está hecha
- Checar viabilidad para implementar widgets en temperaturas y humedad de la app, que sea una opción que el usuario pueda cambiar

------------------------------------Preparar rasp para el arduino------------------------------------
- https://askubuntu.com/questions/58119/changing-permissions-on-serial-port
- De igual forma se podría usar un script para automatizar estos pasos necesarios de manera obligatoria
- Comando: sudo usermod -a -G dialout $USER